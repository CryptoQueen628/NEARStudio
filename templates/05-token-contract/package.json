{
  "name": "@wasm/token_contract_ts",
  "description": "",
  "version": "0.0.1",
  "scripts": {
    "build": "mkdir -p out/ && gulp",
    "deploy:contract": "near deploy",
    "deploy:pages": "gh-pages -d src",
    "deploy": "npm run build && npm run deploy:contract && npm run deploy:pages",
    "prestart": "npm run build && npm run deploy:contract",
    "start": "python3 -mhttp.server --directory src",
    "test": "npm run build && jest test --env=near-shell/test_environment"
  },
  "devDependencies": {
    "assemblyscript-json": "github:nearprotocol/assemblyscript-json",
    "gh-pages": "^2.0.1",
    "gulp": "^3",
    "jest": "^22.4.4",
    "jest-environment-node": "^24.5.0",
    "near-runtime-ts": "github:nearprotocol/near-runtime-ts",
    "near-shell": "github:nearprotocol/near-shell"
  },
  "wasmStudio": {
    "name": "Token Smart Contract",
    "description": "# Token Smart Contract\n\nThis project contains implementation of token contract similar to ERC20. The contract allows you to launch a new token on top of the NEAR blockchain which users can interact with as if it were any other token -- checking balances, transferring, etc.\n\n[AssemblyScript](https://github.com/AssemblyScript/assemblyscript) compiles strictly typed TypeScript to WebAssembly using Binaryen. See the [AssemblyScript wiki](https://github.com/AssemblyScript/assemblyscript/wiki) for further instructions and documentation.",
    "icon": "typescript-lang-file-icon"
  },
  "dependencies": {}
}
